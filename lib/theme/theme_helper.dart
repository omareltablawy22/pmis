import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.onPrimary,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(24.h),
          ),
          shadowColor: appTheme.black90029,
          elevation: 18,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.blueGray200,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(20.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return appTheme.pink30001;
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 14.fSize,
          fontFamily: 'Helvetica Neue',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray200,
          fontSize: 12.fSize,
          fontFamily: 'Helvetica Neue',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: appTheme.blueGray200,
          fontSize: 30.fSize,
          fontFamily: 'Helvetica Neue',
          fontWeight: FontWeight.w400,
        ),
        headlineMedium: TextStyle(
          color: appTheme.teal30002,
          fontSize: 29.fSize,
          fontFamily: 'Helvetica Neue',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.blueGray500,
          fontSize: 12.fSize,
          fontFamily: 'Helvetica Neue',
          fontWeight: FontWeight.w700,
        ),
        labelMedium: TextStyle(
          color: appTheme.blueGray200,
          fontSize: 11.fSize,
          fontFamily: 'Helvetica Neue',
          fontWeight: FontWeight.w700,
        ),
        labelSmall: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 9.fSize,
          fontFamily: 'Helvetica Neue',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 20.fSize,
          fontFamily: 'Helvetica Neue',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.teal30004,
          fontSize: 17.fSize,
          fontFamily: 'Helvetica Neue',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 15.fSize,
          fontFamily: 'Helvetica Neue',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF123A49),
    primaryContainer: Color(0XFF84BAF8),

    // Error colors
    errorContainer: Color(0XFF3C826A),
    onError: Color(0XFF123948),

    // On colors(text colors)
    onPrimary: Color(0XFFFFFFFF),
    onPrimaryContainer: Color(0XFF232323),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber300 => Color(0XFFFDD64B);
  Color get amber30001 => Color(0XFFFCD349);
  Color get amber30002 => Color(0XFFFED74C);
  Color get amber30003 => Color(0XFFFBD147);
  Color get amber30004 => Color(0XFFFFD94E);
  Color get amber30005 => Color(0XFFFED84D);
  Color get amber30006 => Color(0XFFFDD54A);
  Color get amber30007 => Color(0XFFFFDA4F);
  Color get amber30008 => Color(0XFFFCD449);
  Color get amber30009 => Color(0XFFFBD248);
  Color get amberA200 => Color(0XFFFACF45);
  Color get amberA20001 => Color(0XFFF9CD42);
  Color get amberA20002 => Color(0XFFF6C83D);
  Color get amberA20003 => Color(0XFFF8CB40);
  Color get amberA20004 => Color(0XFFF7C93E);
  Color get amberA20005 => Color(0XFFF9CE44);
  Color get amberA20006 => Color(0XFFF9CE43);
  Color get amberA20007 => Color(0XFFF8CC41);
  Color get amberA20008 => Color(0XFFF7CA3F);
  Color get amberA20009 => Color(0XFFFAD046);

  // Black
  Color get black90029 => Color(0X29000000);

  // BlueGray
  Color get blueGray100 => Color(0XFFCCCCCC);
  Color get blueGray10001 => Color(0XFFD6D6D6);
  Color get blueGray10002 => Color(0XFFD5D5D5);
  Color get blueGray10003 => Color(0XFFD0D0D0);
  Color get blueGray10004 => Color(0XFFD2D2D2);
  Color get blueGray10005 => Color(0XFFD9D9D9);
  Color get blueGray10006 => Color(0XFFD3D9DE);
  Color get blueGray10007 => Color(0XFFCDCDCD);
  Color get blueGray10008 => Color(0XFFD3D3D3);
  Color get blueGray10009 => Color(0XFFCECECE);
  Color get blueGray10010 => Color(0XFFD8D8D8);
  Color get blueGray10011 => Color(0XFFD7D7D7);
  Color get blueGray10012 => Color(0XFFD1D1D1);
  Color get blueGray10013 => Color(0XFFCFCFCF);
  Color get blueGray10014 => Color(0XFFD4D4D4);
  Color get blueGray200 => Color(0XFFB9C0C6);
  Color get blueGray20001 => Color(0XFFB8C0C6);
  Color get blueGray500 => Color(0XFF40849F);

  // DeepOrange
  Color get deepOrange400 => Color(0XFFF28044);

  // Gray
  Color get gray100 => Color(0XFFF2F3F7);
  Color get gray200 => Color(0XFFE7E7E7);
  Color get gray20001 => Color(0XFFE8E8E8);
  Color get gray300 => Color(0XFFDFDFDF);
  Color get gray30001 => Color(0XFFE4E4E4);
  Color get gray30002 => Color(0XFFDADADA);
  Color get gray30003 => Color(0XFFE0E0E0);
  Color get gray30004 => Color(0XFFDBDBDB);
  Color get gray30005 => Color(0XFFDEDEDE);
  Color get gray30006 => Color(0XFFE3E3E3);
  Color get gray30007 => Color(0XFFE6E6E6);
  Color get gray30008 => Color(0XFFE1E1E1);
  Color get gray30009 => Color(0XFFE2E2E2);
  Color get gray30010 => Color(0XFFDDDDDD);
  Color get gray30011 => Color(0XFFE5E5E5);
  Color get gray30012 => Color(0XFFDCDCDC);
  Color get gray50 => Color(0XFFFBFBFC);
  Color get gray600 => Color(0XFF6F767C);

  // Green
  Color get green600 => Color(0XFF3A996B);
  Color get greenA200 => Color(0XFF5AF2A8);
  Color get greenA20001 => Color(0XFF59ECA5);
  Color get greenA20002 => Color(0XFF57E9A2);

  // Indigo
  Color get indigo300 => Color(0XFF7AA3D3);
  Color get indigo50 => Color(0XFFE4E8ED);
  Color get indigoA100 => Color(0XFF859BED);
  Color get indigoA10001 => Color(0XFF8EA2F1);
  Color get indigoA10002 => Color(0XFF95A8F5);
  Color get indigoA10003 => Color(0XFF92A6F4);
  Color get indigoA10004 => Color(0XFF899EEF);
  Color get indigoA10005 => Color(0XFF9AACF7);
  Color get indigoA10006 => Color(0XFF98AAF6);
  Color get indigoA10007 => Color(0XFF889DEF);
  Color get indigoA10008 => Color(0XFF8DA1F1);
  Color get indigoA10009 => Color(0XFF94A7F4);
  Color get indigoA10010 => Color(0XFF869CEE);
  Color get indigoA10011 => Color(0XFF8A9FF0);
  Color get indigoA10012 => Color(0XFF8BA0F0);
  Color get indigoA10013 => Color(0XFF99ABF7);
  Color get indigoA10014 => Color(0XFF97A9F6);
  Color get indigoA10015 => Color(0XFF9CADF8);
  Color get indigoA10016 => Color(0XFF8299EC);
  Color get indigoA10017 => Color(0XFF879DEE);
  Color get indigoA10018 => Color(0XFF9BACF8);
  Color get indigoA10019 => Color(0XFF90A4F3);
  Color get indigoA10020 => Color(0XFF839AEC);
  Color get indigoA10021 => Color(0XFF849AED);
  Color get indigoA10022 => Color(0XFF8FA3F2);
  Color get indigoA10023 => Color(0XFF91A5F3);
  Color get indigoA10024 => Color(0XFF96A9F5);
  Color get indigoA10025 => Color(0XFF8CA0F0);
  Color get indigoA10026 => Color(0XFF93A6F4);

  // Indigoa
  Color get indigo4003a => Color(0X3A5784C1);

  // Orange
  Color get orange200 => Color(0XFFFDCD6D);
  Color get orangeA100 => Color(0XFFFFCF6E);

  // Pink
  Color get pink300 => Color(0XFFFC718B);
  Color get pink30001 => Color(0XFFFF728D);

  // Teal
  Color get teal300 => Color(0XFF48B285);
  Color get teal30001 => Color(0XFF4DC08C);
  Color get teal30002 => Color(0XFF47B184);
  Color get teal30003 => Color(0XFF4EC690);
  Color get teal30004 => Color(0XFF4DC18D);
  Color get teal400 => Color(0XFF45A37C);
  Color get teal40001 => Color(0XFF44A07C);

  // Tealc
  Color get teal3006c => Color(0X6C55D69C);

  // Yellow
  Color get yellow700 => Color(0XFFF3C238);
  Color get yellow70001 => Color(0XFFF5C63C);
  Color get yellow70002 => Color(0XFFF4C43A);
  Color get yellow70003 => Color(0XFFF3C137);
  Color get yellow70004 => Color(0XFFF5C53B);
  Color get yellow70005 => Color(0XFFF4C339);
  Color get yellow70006 => Color(0XFFF6C73D);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
